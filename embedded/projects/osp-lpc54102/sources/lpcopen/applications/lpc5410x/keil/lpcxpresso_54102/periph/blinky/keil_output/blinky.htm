<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\keil_output\blinky.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\keil_output\blinky.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Mon Apr 20 11:50:34 2015
<BR><P>
<H3>Maximum Stack Usage =        216 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
SystemInit &rArr; Board_SystemInit &rArr; Board_SetupClocking &rArr; Chip_SetupIrcClocking &rArr; Chip_Clock_SetupPLLData &rArr; Chip_Clock_GetPllConfig &rArr; __aeabi_uldivmod
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[59]">__user_initial_stackheap</a>
 <LI><a href="#[7f]">Chip_POWER_GetROMVersion</a>
 <LI><a href="#[7d]">Chip_POWER_SetVoltage</a>
 <LI><a href="#[81]">__set_voltage</a>
 <LI><a href="#[80]">getBROMVersion</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[4]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">NMI_Handler</a><BR>
 <LI><a href="#[5]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">HardFault_Handler</a><BR>
 <LI><a href="#[6]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">MemManage_Handler</a><BR>
 <LI><a href="#[7]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">BusFault_Handler</a><BR>
 <LI><a href="#[8]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">UsageFault_Handler</a><BR>
 <LI><a href="#[9]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SVC_Handler</a><BR>
 <LI><a href="#[a]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">DebugMon_Handler</a><BR>
 <LI><a href="#[b]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">PendSV_Handler</a><BR>
 <LI><a href="#[27]">ADC_SEQA_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[27]">ADC_SEQA_IRQHandler</a><BR>
 <LI><a href="#[57]">_sys_exit</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[57]">_sys_exit</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[27]">ADC_SEQA_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[28]">ADC_SEQB_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[29]">ADC_THCMP_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[e]">BOD_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[38]">Board_UART_Done</a> from board.o(i.Board_UART_Done) referenced from board.o(i.Board_UART_Init)
 <LI><a href="#[7]">BusFault_Handler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[18]">CT32B0_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[19]">CT32B1_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[1a]">CT32B2_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[1b]">CT32B3_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[1c]">CT32B4_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[10]">DMA_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[a]">DebugMon_Handler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[11]">GINT0_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[2c]">GINT1_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[5]">HardFault_Handler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[22]">I2C0_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[23]">I2C1_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[24]">I2C2_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[2b]">MAILBOX_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[17]">MRT_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[6]">MemManage_Handler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[4]">NMI_Handler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[12]">PIN_INT0_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[13]">PIN_INT1_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[14]">PIN_INT2_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[15]">PIN_INT3_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[2d]">PIN_INT4_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[2e]">PIN_INT5_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[2f]">PIN_INT6_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[30]">PIN_INT7_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[b]">PendSV_Handler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[31]">RIT_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[2a]">RTC_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[32]">Reserved41_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[33]">Reserved42_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[34]">Reserved43_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[35]">Reserved44_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[f]">Reserved_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced 5 times from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[3]">Reset_Handler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[1d]">SCT0_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[25]">SPI0_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[26]">SPI1_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[c]">SysTick_Handler</a> from blinky.o(i.SysTick_Handler) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[36]">SystemInit</a> from sysinit.o(i.SystemInit) referenced from keil_startup_lpc5410x.o(.text)
 <LI><a href="#[1e]">UART0_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[1f]">UART1_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[20]">UART2_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[21]">UART3_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[3b]">UART_CalculateBaud</a> from hw_uart.o(i.UART_CalculateBaud) referenced from hw_uart.o(.constdata)
 <LI><a href="#[3d]">UART_Configure</a> from hw_uart.o(i.UART_Configure) referenced from hw_uart.o(.constdata)
 <LI><a href="#[45]">UART_GetDriverVersion</a> from hw_uart.o(i.UART_GetDriverVersion) referenced from hw_uart.o(.constdata)
 <LI><a href="#[3a]">UART_GetMemSize</a> from hw_uart.o(i.UART_GetMemSize) referenced from hw_uart.o(.constdata)
 <LI><a href="#[40]">UART_Handler</a> from hw_uart.o(i.UART_Handler) referenced from hw_uart.o(.constdata)
 <LI><a href="#[3c]">UART_Init</a> from hw_uart.o(i.UART_Init) referenced from hw_uart.o(.constdata)
 <LI><a href="#[3f]">UART_RegisterCB</a> from hw_uart.o(i.UART_RegisterCB) referenced from hw_uart.o(.constdata)
 <LI><a href="#[42]">UART_Rx</a> from hw_uart.o(i.UART_Rx) referenced from hw_uart.o(.constdata)
 <LI><a href="#[3e]">UART_SetControl</a> from hw_uart.o(i.UART_SetControl) referenced from hw_uart.o(.constdata)
 <LI><a href="#[41]">UART_Tx</a> from hw_uart.o(i.UART_Tx) referenced from hw_uart.o(.constdata)
 <LI><a href="#[44]">UART_WaitRX</a> from hw_uart.o(i.UART_WaitRX) referenced from hw_uart.o(.constdata)
 <LI><a href="#[43]">UART_WaitTX</a> from hw_uart.o(i.UART_WaitTX) referenced from hw_uart.o(.constdata)
 <LI><a href="#[16]">UTICK_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[8]">UsageFault_Handler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[d]">WDT_IRQHandler</a> from keil_startup_lpc5410x.o(.text) referenced from keil_startup_lpc5410x.o(RESET)
 <LI><a href="#[39]">_UART_HandleTxRx</a> from hw_uart.o(i._UART_HandleTxRx) referenced from hw_uart.o(i.UART_Init)
 <LI><a href="#[39]">_UART_HandleTxRx</a> from hw_uart.o(i._UART_HandleTxRx) referenced from hw_uart.o(i.UART_RegisterCB)
 <LI><a href="#[46]">__main</a> from __main.o(!!!main) referenced from keil_startup_lpc5410x.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[46]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[47]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[49]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[92]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[93]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[4a]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[94]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[50]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[4b]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[95]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[96]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[97]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[98]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[99]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[9a]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[9b]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[9c]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[9d]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[9e]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[9f]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[a0]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[a1]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[a2]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[a3]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[a4]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[a5]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[a6]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[a7]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[a8]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[55]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[a9]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[aa]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[ab]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[ac]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[ad]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[ae]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[48]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[af]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[4d]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[4f]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[b0]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[51]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Board_Init &rArr; Board_UART_Init &rArr; Chip_Clock_GetAsyncSyscon_ClockRate &rArr; Chip_Clock_GetSystemPLLOutClockRate &rArr; Chip_Clock_GetSystemPLLOutFromSetupUpdate &rArr; Chip_Clock_GetSystemPLLOutFromSetup &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[b1]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[5a]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[54]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[b2]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[56]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[3]"></a>Reset_Handler</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>ADC_SEQA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SEQA_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SEQA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>ADC_SEQB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>ADC_THCMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>CT32B0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>CT32B1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>CT32B2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>CT32B3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>CT32B4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>GINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>GINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>MAILBOX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>MRT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>PIN_INT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>PIN_INT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>PIN_INT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>PIN_INT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>PIN_INT4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>PIN_INT5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>PIN_INT6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>PIN_INT7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>RIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>Reserved41_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>Reserved42_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>Reserved43_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>Reserved44_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>Reserved_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SCT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>UTICK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc5410x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, keil_startup_lpc5410x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[74]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLOutFromSetup
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetPllConfig
</UL>

<P><STRONG><a name="[b3]"></a>_ll_udiv</STRONG> (Thumb, 238 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[8d]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[b4]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[b5]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[b7]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[b8]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[b9]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[4e]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[53]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[ba]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[58]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[bb]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[5b]"></a>Board_Init</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, board.o(i.Board_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Board_Init &rArr; Board_UART_Init &rArr; Chip_Clock_GetAsyncSyscon_ClockRate &rArr; Chip_Clock_GetSystemPLLOutClockRate &rArr; Chip_Clock_GetSystemPLLOutFromSetupUpdate &rArr; Chip_Clock_GetSystemPLLOutFromSetup &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_UART_Init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_GPIO_Init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_EnablePeriphClock
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[90]"></a>Board_LED_Set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, board.o(i.Board_LED_Set))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[86]"></a>Board_LED_Toggle</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, board.o(i.Board_LED_Toggle))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[5f]"></a>Board_SetupClocking</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, board_sysinit.o(i.Board_SetupClocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = Board_SetupClocking &rArr; Chip_SetupIrcClocking &rArr; Chip_Clock_SetupPLLData &rArr; Chip_Clock_GetPllConfig &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SetupIrcClocking
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SYSCON_PowerUp
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_SetCLKOUTSource
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_SystemInit
</UL>

<P><STRONG><a name="[63]"></a>Board_SetupMuxing</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, board_sysinit.o(i.Board_SetupMuxing))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Board_SetupMuxing &rArr; ConfigureBridgeSSEL &rArr; Chip_IOCON_SetPinMuxing
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_IOCON_SetPinMuxing
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigureBridgeSSEL
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_EnablePeriphClock
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_SystemInit
</UL>

<P><STRONG><a name="[66]"></a>Board_SystemInit</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, board_sysinit.o(i.Board_SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = Board_SystemInit &rArr; Board_SetupClocking &rArr; Chip_SetupIrcClocking &rArr; Chip_Clock_SetupPLLData &rArr; Chip_Clock_GetPllConfig &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_SetupMuxing
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_SetupClocking
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[5c]"></a>Chip_Clock_EnablePeriphClock</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, clock_5410x.o(i.Chip_Clock_EnablePeriphClock))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_UART_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_SetupMuxing
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_GPIO_Init
</UL>

<P><STRONG><a name="[6d]"></a>Chip_Clock_GetAsyncSysconClockSource</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, clock_5410x.o(i.Chip_Clock_GetAsyncSysconClockSource))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetAsyncSyscon_ClockRate
</UL>

<P><STRONG><a name="[69]"></a>Chip_Clock_GetAsyncSyscon_ClockRate</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, clock_5410x.o(i.Chip_Clock_GetAsyncSyscon_ClockRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Chip_Clock_GetAsyncSyscon_ClockRate &rArr; Chip_Clock_GetSystemPLLOutClockRate &rArr; Chip_Clock_GetSystemPLLOutFromSetupUpdate &rArr; Chip_Clock_GetSystemPLLOutFromSetup &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLOutClockRate
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLInClockRate
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMainClockRate
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetAsyncSysconClockSource
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_UART_Init
</UL>

<P><STRONG><a name="[6e]"></a>Chip_Clock_GetMainClockRate</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, clock_5410x.o(i.Chip_Clock_GetMainClockRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetMain_B_ClockRate &rArr; Chip_Clock_GetSystemPLLOutClockRate &rArr; Chip_Clock_GetSystemPLLOutFromSetupUpdate &rArr; Chip_Clock_GetSystemPLLOutFromSetup &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMain_B_ClockRate
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMain_A_ClockRate
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemClockRate
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetAsyncSyscon_ClockRate
</UL>

<P><STRONG><a name="[72]"></a>Chip_Clock_GetMain_A_ClockRate</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, clock_5410x.o(i.Chip_Clock_GetMain_A_ClockRate))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMain_B_ClockRate
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMainClockRate
</UL>

<P><STRONG><a name="[71]"></a>Chip_Clock_GetMain_B_ClockRate</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, clock_5410x.o(i.Chip_Clock_GetMain_B_ClockRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Chip_Clock_GetMain_B_ClockRate &rArr; Chip_Clock_GetSystemPLLOutClockRate &rArr; Chip_Clock_GetSystemPLLOutFromSetupUpdate &rArr; Chip_Clock_GetSystemPLLOutFromSetup &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLOutClockRate
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLInClockRate
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMain_A_ClockRate
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMainClockRate
</UL>

<P><STRONG><a name="[75]"></a>Chip_Clock_GetSystemClockRate</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, clock_5410x.o(i.Chip_Clock_GetSystemClockRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Chip_Clock_GetSystemClockRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetMain_B_ClockRate &rArr; Chip_Clock_GetSystemPLLOutClockRate &rArr; Chip_Clock_GetSystemPLLOutFromSetupUpdate &rArr; Chip_Clock_GetSystemPLLOutFromSetup &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMainClockRate
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[6f]"></a>Chip_Clock_GetSystemPLLInClockRate</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, pll_5410x.o(i.Chip_Clock_GetSystemPLLInClockRate))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLOutFromSetup
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_SetupPLLData
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMain_B_ClockRate
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetAsyncSyscon_ClockRate
</UL>

<P><STRONG><a name="[70]"></a>Chip_Clock_GetSystemPLLOutClockRate</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, pll_5410x.o(i.Chip_Clock_GetSystemPLLOutClockRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Chip_Clock_GetSystemPLLOutClockRate &rArr; Chip_Clock_GetSystemPLLOutFromSetupUpdate &rArr; Chip_Clock_GetSystemPLLOutFromSetup &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLOutFromSetupUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMain_B_ClockRate
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetAsyncSyscon_ClockRate
</UL>

<P><STRONG><a name="[77]"></a>Chip_Clock_GetSystemPLLOutFromSetup</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, pll_5410x.o(i.Chip_Clock_GetSystemPLLOutFromSetup))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Chip_Clock_GetSystemPLLOutFromSetup &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findPllPreDiv
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findPllPostDiv
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findPllMMult
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLInClockRate
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLOutFromSetupUpdate
</UL>

<P><STRONG><a name="[85]"></a>Chip_Clock_SetAsyncSysconClockSource</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, clock_5410x.o(i.Chip_Clock_SetAsyncSysconClockSource))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SetupIrcClocking
</UL>

<P><STRONG><a name="[62]"></a>Chip_Clock_SetCLKOUTSource</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, clock_5410x.o(i.Chip_Clock_SetCLKOUTSource))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_SetupClocking
</UL>

<P><STRONG><a name="[83]"></a>Chip_Clock_SetMainClockSource</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, clock_5410x.o(i.Chip_Clock_SetMainClockSource))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SetupIrcClocking
</UL>

<P><STRONG><a name="[7b]"></a>Chip_Clock_SetupPLLData</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, pll_5410x.o(i.Chip_Clock_SetupPLLData))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Chip_Clock_SetupPLLData &rArr; Chip_Clock_GetPllConfig &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetPllConfig
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLInClockRate
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SetupIrcClocking
</UL>

<P><STRONG><a name="[7c]"></a>Chip_Clock_SetupSystemPLLPrec</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, pll_5410x.o(i.Chip_Clock_SetupSystemPLLPrec))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Chip_Clock_SetupSystemPLLPrec &rArr; Chip_Clock_GetSystemPLLOutFromSetupUpdate &rArr; Chip_Clock_GetSystemPLLOutFromSetup &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_POWER_SetVoltage
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLOutFromSetupUpdate
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SYSCON_PowerUp
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SetupIrcClocking
</UL>

<P><STRONG><a name="[5e]"></a>Chip_GPIO_Init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gpio_5410x.o(i.Chip_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Chip_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SYSCON_PeriphReset
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_EnablePeriphClock
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[64]"></a>Chip_IOCON_SetPinMuxing</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, iocon_5410x.o(i.Chip_IOCON_SetPinMuxing))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Chip_IOCON_SetPinMuxing
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_SetupMuxing
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigureBridgeSSEL
</UL>

<P><STRONG><a name="[7f]"></a>Chip_POWER_GetROMVersion</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, power_library.o(i.Chip_POWER_GetROMVersion))
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBROMVersion
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupFlashClocks
</UL>

<P><STRONG><a name="[7d]"></a>Chip_POWER_SetVoltage</STRONG> (Thumb, 50 bytes, Stack size unknown bytes, power_library.o(i.Chip_POWER_SetVoltage))
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBROMVersion
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_voltage
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_SetupSystemPLLPrec
</UL>

<P><STRONG><a name="[84]"></a>Chip_SYSCON_Enable_ASYNC_Syscon</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, syscon_5410x.o(i.Chip_SYSCON_Enable_ASYNC_Syscon))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SetupIrcClocking
</UL>

<P><STRONG><a name="[7e]"></a>Chip_SYSCON_PeriphReset</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, syscon_5410x.o(i.Chip_SYSCON_PeriphReset))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_GPIO_Init
</UL>

<P><STRONG><a name="[60]"></a>Chip_SYSCON_PowerUp</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, syscon_5410x.o(i.Chip_SYSCON_PowerUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Chip_SYSCON_PowerUp
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_SetupSystemPLLPrec
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SetupIrcClocking
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_SetupClocking
</UL>

<P><STRONG><a name="[61]"></a>Chip_SetupIrcClocking</STRONG> (Thumb, 98 bytes, Stack size 64 bytes, sysinit_5410x.o(i.Chip_SetupIrcClocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = Chip_SetupIrcClocking &rArr; Chip_Clock_SetupPLLData &rArr; Chip_Clock_GetPllConfig &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_SetupSystemPLLPrec
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_SetupPLLData
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupFlashClocks
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SYSCON_Enable_ASYNC_Syscon
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_SetMainClockSource
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_SetAsyncSysconClockSource
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SYSCON_PowerUp
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_SetupClocking
</UL>

<P><STRONG><a name="[6a]"></a>ROM_UART_CalBaud</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, romapi_uart.o(i.ROM_UART_CalBaud))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_UART_Init
</UL>

<P><STRONG><a name="[6b]"></a>ROM_UART_Configure</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, romapi_uart.o(i.ROM_UART_Configure))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_UART_Init
</UL>

<P><STRONG><a name="[67]"></a>ROM_UART_GetMemSize</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, romapi_uart.o(i.ROM_UART_GetMemSize))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_UART_Init
</UL>

<P><STRONG><a name="[68]"></a>ROM_UART_Init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, romapi_uart.o(i.ROM_UART_Init))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_UART_Init
</UL>

<P><STRONG><a name="[6c]"></a>ROM_UART_RegisterCB</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, romapi_uart.o(i.ROM_UART_RegisterCB))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_UART_Init
</UL>

<P><STRONG><a name="[c]"></a>SysTick_Handler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, blinky.o(i.SysTick_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_LED_Toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, chip_5410x.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = SystemCoreClockUpdate &rArr; Chip_Clock_GetSystemClockRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetMain_B_ClockRate &rArr; Chip_Clock_GetSystemPLLOutClockRate &rArr; Chip_Clock_GetSystemPLLOutFromSetupUpdate &rArr; Chip_Clock_GetSystemPLLOutFromSetup &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemClockRate
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[36]"></a>SystemInit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, sysinit.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = SystemInit &rArr; Board_SystemInit &rArr; Board_SetupClocking &rArr; Chip_SetupIrcClocking &rArr; Chip_Clock_SetupPLLData &rArr; Chip_Clock_GetPllConfig &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpuInit
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc5410x.o(.text)
</UL>
<P><STRONG><a name="[3b]"></a>UART_CalculateBaud</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, hw_uart.o(i.UART_CalculateBaud))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UART_CalculateBaud &rArr; _UART_CalcMul &rArr; _CalcErr
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UART_CalcMul
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UART_CalcDiv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hw_uart.o(.constdata)
</UL>
<P><STRONG><a name="[3d]"></a>UART_Configure</STRONG> (Thumb, 122 bytes, Stack size 12 bytes, hw_uart.o(i.UART_Configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART_Configure
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hw_uart.o(.constdata)
</UL>
<P><STRONG><a name="[45]"></a>UART_GetDriverVersion</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hw_uart.o(i.UART_GetDriverVersion))
<BR>[Address Reference Count : 1]<UL><LI> hw_uart.o(.constdata)
</UL>
<P><STRONG><a name="[3a]"></a>UART_GetMemSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hw_uart.o(i.UART_GetMemSize))
<BR>[Address Reference Count : 1]<UL><LI> hw_uart.o(.constdata)
</UL>
<P><STRONG><a name="[40]"></a>UART_Handler</STRONG> (Thumb, 382 bytes, Stack size 24 bytes, hw_uart.o(i.UART_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UART_Handler &rArr; _UART_HandleXfer
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UART_InvokeCB
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UART_HandleXfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hw_uart.o(.constdata)
</UL>
<P><STRONG><a name="[3c]"></a>UART_Init</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, hw_uart.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART_Init &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hw_uart.o(.constdata)
</UL>
<P><STRONG><a name="[3f]"></a>UART_RegisterCB</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, hw_uart.o(i.UART_RegisterCB))
<BR>[Address Reference Count : 1]<UL><LI> hw_uart.o(.constdata)
</UL>
<P><STRONG><a name="[42]"></a>UART_Rx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hw_uart.o(i.UART_Rx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_Rx &rArr; _UART_Xfer
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UART_Xfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hw_uart.o(.constdata)
</UL>
<P><STRONG><a name="[3e]"></a>UART_SetControl</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, hw_uart.o(i.UART_SetControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_SetControl
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UART_InvokeCB
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hw_uart.o(.constdata)
</UL>
<P><STRONG><a name="[41]"></a>UART_Tx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hw_uart.o(i.UART_Tx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_Tx &rArr; _UART_Xfer
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UART_Xfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hw_uart.o(.constdata)
</UL>
<P><STRONG><a name="[44]"></a>UART_WaitRX</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, hw_uart.o(i.UART_WaitRX))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART_WaitRX &rArr; _UART_HandleXfer
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UART_HandleXfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hw_uart.o(.constdata)
</UL>
<P><STRONG><a name="[43]"></a>UART_WaitTX</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, hw_uart.o(i.UART_WaitTX))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART_WaitTX &rArr; _UART_HandleXfer
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UART_HandleXfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hw_uart.o(.constdata)
</UL>
<P><STRONG><a name="[57]"></a>_sys_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, board.o(i._sys_exit))
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[7a]"></a>findPllMMult</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, pll_5410x.o(i.findPllMMult))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = findPllMMult
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLOutFromSetup
</UL>

<P><STRONG><a name="[79]"></a>findPllPostDiv</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, pll_5410x.o(i.findPllPostDiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = findPllPostDiv
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLOutFromSetup
</UL>

<P><STRONG><a name="[78]"></a>findPllPreDiv</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, pll_5410x.o(i.findPllPreDiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = findPllPreDiv
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLOutFromSetup
</UL>

<P><STRONG><a name="[88]"></a>fpuInit</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, fpu_init.o(i.fpuInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = fpuInit
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[52]"></a>main</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, blinky.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = main &rArr; Board_Init &rArr; Board_UART_Init &rArr; Chip_Clock_GetAsyncSyscon_ClockRate &rArr; Chip_Clock_GetSystemPLLOutClockRate &rArr; Chip_Clock_GetSystemPLLOutFromSetupUpdate &rArr; Chip_Clock_GetSystemPLLOutFromSetup &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_LED_Set
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[4c]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[bc]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[bd]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[38]"></a>Board_UART_Done</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, board.o(i.Board_UART_Done))
<BR>[Address Reference Count : 1]<UL><LI> board.o(i.Board_UART_Init)
</UL>
<P><STRONG><a name="[5d]"></a>Board_UART_Init</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, board.o(i.Board_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Board_UART_Init &rArr; Chip_Clock_GetAsyncSyscon_ClockRate &rArr; Chip_Clock_GetSystemPLLOutClockRate &rArr; Chip_Clock_GetSystemPLLOutFromSetupUpdate &rArr; Chip_Clock_GetSystemPLLOutFromSetup &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ROM_UART_RegisterCB
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ROM_UART_Init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ROM_UART_GetMemSize
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ROM_UART_Configure
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ROM_UART_CalBaud
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetAsyncSyscon_ClockRate
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_EnablePeriphClock
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[65]"></a>ConfigureBridgeSSEL</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, board_sysinit.o(i.ConfigureBridgeSSEL))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ConfigureBridgeSSEL &rArr; Chip_IOCON_SetPinMuxing
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_IOCON_SetPinMuxing
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_SetupMuxing
</UL>

<P><STRONG><a name="[91]"></a>Chip_SYSCON_SetFLASHAccess</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sysinit_5410x.o(i.Chip_SYSCON_SetFLASHAccess))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupFlashClocks
</UL>

<P><STRONG><a name="[82]"></a>setupFlashClocks</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, sysinit_5410x.o(i.setupFlashClocks))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = setupFlashClocks
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_POWER_GetROMVersion
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SYSCON_SetFLASHAccess
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SetupIrcClocking
</UL>

<P><STRONG><a name="[73]"></a>Chip_Clock_GetPllConfig</STRONG> (Thumb, 608 bytes, Stack size 56 bytes, pll_5410x.o(i.Chip_Clock_GetPllConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Chip_Clock_GetPllConfig &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_SetupPLLData
</UL>

<P><STRONG><a name="[76]"></a>Chip_Clock_GetSystemPLLOutFromSetupUpdate</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, pll_5410x.o(i.Chip_Clock_GetSystemPLLOutFromSetupUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Chip_Clock_GetSystemPLLOutFromSetupUpdate &rArr; Chip_Clock_GetSystemPLLOutFromSetup &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLOutFromSetup
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_SetupSystemPLLPrec
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLOutClockRate
</UL>

<P><STRONG><a name="[8f]"></a>_CalcErr</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, hw_uart.o(i._CalcErr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _CalcErr
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UART_CalcMul
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UART_CalcDiv
</UL>

<P><STRONG><a name="[8a]"></a>_UART_CalcDiv</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, hw_uart.o(i._UART_CalcDiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _UART_CalcDiv &rArr; _CalcErr
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcErr
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CalculateBaud
</UL>

<P><STRONG><a name="[89]"></a>_UART_CalcMul</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, hw_uart.o(i._UART_CalcMul))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _UART_CalcMul &rArr; _CalcErr
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcErr
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CalculateBaud
</UL>

<P><STRONG><a name="[39]"></a>_UART_HandleTxRx</STRONG> (Thumb, 92 bytes, Stack size 12 bytes, hw_uart.o(i._UART_HandleTxRx))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _UART_HandleTxRx
</UL>
<BR>[Address Reference Count : 2]<UL><LI> hw_uart.o(i.UART_Init)
<LI> hw_uart.o(i.UART_RegisterCB)
</UL>
<P><STRONG><a name="[8b]"></a>_UART_HandleXfer</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, hw_uart.o(i._UART_HandleXfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _UART_HandleXfer
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UART_InvokeCB
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitTX
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitRX
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Handler
</UL>

<P><STRONG><a name="[8c]"></a>_UART_InvokeCB</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hw_uart.o(i._UART_InvokeCB))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UART_HandleXfer
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetControl
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Handler
</UL>

<P><STRONG><a name="[8e]"></a>_UART_Xfer</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, hw_uart.o(i._UART_Xfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _UART_Xfer
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Tx
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Rx
</UL>

<P><STRONG><a name="[81]"></a>__set_voltage</STRONG> (Thumb, 224 bytes, Stack size unknown bytes, power_library.o(i.__set_voltage))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_POWER_SetVoltage
</UL>

<P><STRONG><a name="[80]"></a>getBROMVersion</STRONG> (Thumb, 22 bytes, Stack size unknown bytes, power_library.o(i.getBROMVersion))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_POWER_SetVoltage
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_POWER_GetROMVersion
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
